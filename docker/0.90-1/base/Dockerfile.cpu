FROM ubuntu:16.04

LABEL maintainer="Amazon AI"

ARG XG_VERSION=0.90
ARG PYTHON_VERSION=3.6.6

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        software-properties-common \
        build-essential \
        ca-certificates \
        curl \
        wget \
        git \
        libatlas-dev \
        openssh-client \
        openssh-server \
        nginx \
        jq \
        vim \
        zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

# Install python and pip
RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz && \
        tar -xvf Python-$PYTHON_VERSION.tgz && cd Python-$PYTHON_VERSION && \
        ./configure && make && make install && \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            libreadline-gplv2-dev \
            libncursesw5-dev \
            libssl-dev \
            libsqlite3-dev \
            tk-dev \
            libgdbm-dev \
            libc6-dev \
            liblzma-dev \
            libbz2-dev && \
        make && make install && rm -rf ../Python-$PYTHON_VERSION* && \
        ln -s /usr/local/bin/pip3 /usr/bin/pip

RUN pip3 --no-cache-dir install --upgrade pip setuptools
RUN ln -s $(which ${PYTHON}) /usr/local/bin/python

# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
# Force stdin, stdout and stderr to be totally unbuffered. Good for logging
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib" \
    PYTHONIOENCODING=UTF-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# Install latest version of XGBoost and dependencies
RUN pip3 install --no-cache --upgrade \
        "xgboost==$XG_VERSION" \
        "PyYAML<4.3" \
        matplotlib \
        numpy \
        pandas \
        Pillow \
        "psutil==5.4.8" \
        "requests<2.21" \
        "retrying==1.3.3" \
        "sagemaker-containers>=2.5.1" \
        scikit-learn \
        scipy \
        "urllib3<1.25" \
        wheel

# Will install from pypi once packages are released there. For now, copy from local file system.
ARG tornasole_installable=tornasole-0.4a0-py3-none-any.whl
COPY $tornasole_installable /tmp/.
RUN pip3 install --force-reinstall /tmp/$tornasole_installable
