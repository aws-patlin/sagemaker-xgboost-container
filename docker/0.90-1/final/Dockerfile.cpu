FROM xgboost-container-base:0.90-1-cpu-py3

COPY requirements.txt /requirements.txt
RUN pip install -r /requirements.txt && rm /requirements.txt

COPY dist/sagemaker_xgboost_container-1.0-py2.py3-none-any.whl /sagemaker_xgboost_container-1.0-py2.py3-none-any.whl
RUN pip install --no-cache /sagemaker_xgboost_container-1.0-py2.py3-none-any.whl && \
    rm /sagemaker_xgboost_container-1.0-py2.py3-none-any.whl

# DMLC patches; TODO: remove after making contributions back to xgboost for tracker.py
COPY src/sagemaker_xgboost_container/dmlc_patch/tracker.py \
   /usr/local/lib/python3.5/dist-packages/xgboost/dmlc-core/tracker/dmlc_tracker/tracker.py

# Create MMS user directory
RUN useradd -m model-server
RUN mkdir -p /home/model-server/tmp
RUN chown -R model-server /home/model-server

# TODO: Create execution parameters endpoint
# RUN python3 setup.py build_plugins plugins=sagemaker

# Copy MMS configs to correct location
COPY mms_config/config.properties /home/model-server/

# Copy MMS entrypoint script
COPY docker/0.90-1/mms-entrypoint.py /usr/local/bin/dockerd-entrypoint.py

LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

# Set SageMaker training environment variables
ENV SM_INPUT /opt/ml/input
ENV SM_INPUT_TRAINING_CONFIG_FILE $SM_INPUT/config/hyperparameters.json
ENV SM_INPUT_DATA_CONFIG_FILE $SM_INPUT/config/inputdataconfig.json
ENV SM_CHECKPOINT_CONFIG_FILE $SM_INPUT/config/checkpointconfig.json

# Set SageMaker serving environment variables
ENV SM_MODEL_DIR /opt/ml/model

# Set SageMaker entrypoints
ENV SAGEMAKER_TRAINING_MODULE sagemaker_xgboost_container.training:main
ENV SAGEMAKER_SERVING_MODULE sagemaker_xgboost_container.serving:main

# Include DMLC python code in PYTHONPATH to use RabitTracker
ENV PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/xgboost/dmlc-core/tracker

EXPOSE 8080 8081
ENV TEMP=/home/model-server/tmp
